# Generated by Django 5.1.6 on 2025-03-16 10:20

import django.db.models.deletion
import django.utils.timezone
import jalwiki_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=20, null=True, unique=True)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('mobile_no', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField(default='N/A')),
                ('city', models.CharField(default='N/A', max_length=100)),
                ('state', models.CharField(default='N/A', max_length=100)),
                ('pincode', models.CharField(default='000000', max_length=6)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the technique.', max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='Unique slug for the technique.', unique=True)),
                ('summary', models.TextField(help_text='Short overview of the technique.')),
                ('detailed_content', models.TextField(help_text='Main detailed content.')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='technique_images/')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_published', models.BooleanField(default=False, help_text='Mark as published to make it publicly visible.')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='techniques', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(help_text='Categories related to this technique.', related_name='techniques', to='jalwiki_app.category')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_techniques', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='TechniqueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=jalwiki_app.models.technique_image_upload_path)),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image.', max_length=255)),
                ('order', models.PositiveIntegerField(default=0, help_text='Position of the image in the display order.')),
                ('type', models.CharField(choices=[('step', 'Step-by-Step'), ('diagram', 'Diagram'), ('result', 'Result'), ('other', 'Other')], default='other', max_length=50)),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technique_images', to='jalwiki_app.technique')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
